<application>
  <component name="AppStorage">
    <histories>
      <item value="the specified substring." />
      <item value="on Heart Beat Response" />
      <item value="Tests whether the file or directory denoted by this abstract pathname * exists." />
      <item value="The authority of a {@link FileProvider} defined in a * {@code &lt;provider&gt;} element in your app's manifest." />
      <item value="Gets the decoded path. * * @return the decoded path, or null if this is not a hierarchical URI * (like &quot;mailto:nobody@google.com&quot;) or the URI is invalid" />
      <item value="/** * Stop the service, if it was previously started. This is the same as * calling {@link android.content.Context#stopService} for this particular service. *" />
      <item value="own" />
      <item value="&lt;p&gt;Causes the Runnable to be added to the message queue, to be run * after the specified amount of time elapses. * The runnable will be run on the user interface thread.&lt;/p&gt;" />
      <item value="TRANSLUCENT" />
      <item value="Evaluation" />
      <item value="is your activity running?" />
      <item value="Visblity" />
      <item value="* Reverses the order of the elements in the specified list.&lt;p&gt; * * This method runs in linear time." />
      <item value="Strip" />
      <item value="no message or extra send to user" />
      <item value="Get network picture failed, show basic notification only" />
      <item value="Contract" />
      <item value="The drawer is unlocked." />
      <item value="lint Options" />
      <item value="target Compatibility" />
      <item value="source Compatibility" />
      <item value="annotation Processor Options" />
      <item value="java Compile Options" />
      <item value="0 x 0" />
      <item value="refresh Consign Price Info" />
      <item value="refresh Pricing Strategy" />
      <item value="confirm" />
      <item value="Coupon" />
      <item value="is Disenble" />
      <item value="context is not instanceof Activity or Service, disable WXStat" />
      <item value="appplatform Type" />
      <item value="Fetch" />
      <item value="on Render Success" />
      <item value="share Banner Tap" />
      <item value="fire Global Event Callback" />
      <item value="webpageUrl is invalid" />
      <item value="Invite Get Bean" />
      <item value="messages" />
      <item value="render By Url" />
      <item value="is attached directly to an Activity" />
      <item value="label" />
      <item value="/** * Change the title associated with this activity. If this is a * top-level activity, the title for its window will change. If it * is an embedded activity, the parent can do whatever it wants * with it." />
      <item value="Send Verify Code" />
      <item value="collocation Accessories Put Off Shelves" />
      <item value="get Collocation Accessories By Stock Code" />
      <item value="receive Collocation Accessories" />
      <item value="close Container For Damage Stock" />
      <item value="** * &lt;p&gt;Computes the coordinates of this view in its window. The argument * must be an array of two integers. After the method returns, the array * contains the x and y location in that order.&lt;/p&gt; *" />
      <item value="&lt;p&gt;Causes the Runnable to be added to the message queue. * The runnable will be run on the user interface thread.&lt;/p&gt; *" />
      <item value="Returns true if the Runnable was successfully placed in to the * message queue. Returns false on failure, usually because the * looper processing the message queue is exiting." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="109" />
        <entry key="ENGLISH" value="110" />
        <entry key="NORWEGIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>