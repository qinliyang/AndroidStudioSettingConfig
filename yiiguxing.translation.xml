<application>
  <component name="AppStorage">
    <histories>
      <item value="No resource identifier found for attribute 'appComponentFactory' in package 'android'" />
      <item value="@param prefix Text to print at the front of each line. * @param fd The raw file descriptor that the dump is being sent to. * @param writer The PrintWriter to which you should dump your state. This will be * closed for you after you return. * @param args additional arguments to the dump request." />
      <item value="Print the Fragments's state into the given stream." />
      <item value="dump" />
      <item value="Returns a shallow copy of this &lt;tt&gt;ArrayList&lt;/tt&gt; instance. (The * elements themselves are not copied.) * * @return a clone of this &lt;tt&gt;ArrayList&lt;/tt&gt; instance" />
      <item value="Container for fragments associated with an activity." />
      <item value=", do not add dropbox and clear mLastCrashedPid" />
      <item value="The same pid with last one" />
      <item value="No Preload View Pager" />
      <item value="Declared On Click Listener" />
      <item value="reflect" />
      <item value="Invocation Target Exception" />
      <item value="INSTALL FAILED USER RESTRICTED" />
      <item value="Sets the minimum width of the view. It is not guaranteed the view will * be able to achieve this minimum width (for example, if its parent layout * constrains it with less available width). *" />
      <item value="search Season" />
      <item value="Return a private FragmentManager for placing and managing Fragments * inside of this Fragment." />
      <item value="existing" />
      <item value="Hides an existing fragment. This is only relevant for fragments whose * views have been added to a container, as this will cause the view to * be hidden." />
      <item value="* Remove an existing fragment. If it was added to a container, its view * is also removed from that container. *" />
      <item value="* @return &lt;code&gt;true&lt;/code&gt; if this transaction contains no operations, * &lt;code&gt;false&lt;/code&gt; otherwise." />
      <item value="Detach the given fragment from the UI. This is the same state as * when it is put on the back stack: the fragment is removed from * the UI, however its state is still being actively managed by the * fragment manager. When going into this state its view hierarchy * is destroyed." />
      <item value="et a list of all fragments that are currently added to the FragmentManager. * This may include those that are hidden as well as those that are shown. * This will not include any fragments only in the back stack, or fragments that * are detached or removed. * &lt;p&gt; * The order of the fragments in the list is the order in which they were * added or attached." />
      <item value="Pop the top state off the back stack. Returns true if there was one * to pop, else false. This function is asynchronous -- it enqueues the * request to pop, but the action will not be performed until the application * returns to its event loop." />
      <item value="Negative to check scrolling up, positive to check scrolling down." />
      <item value="srl Enable Over Scroll Drag" />
      <item value="MILLISECONDS PER PX" />
      <item value="p&gt;Calculates the time for deceleration so that transition from LinearInterpolator to * DecelerateInterpolator looks" />
      <item value="SNAP TO START" />
      <item value="milliseconds" />
      <item value="calculate Speed Per Pixel" />
      <item value="&lt;p&gt;Calculates the time for deceleration so that transition from LinearInterpolator to * DecelerateInterpolator looks smooth.&lt;/p&gt; * * @param dx Distance to scroll * @return Time for DecelerateInterpolator to smoothly traverse the distance when transitioning * from LinearInterpolation" />
      <item value="In a case where dx is very small, rounding may return 0 although dx &gt; 0. // To avoid that issue, ceil the result so that if dx &gt; 0, we'll always return positive // time." />
      <item value="Calculates the time it should take to scroll the given distance (in pixels)" />
      <item value="calculate Time For Scrolling" />
      <item value="ceil" />
      <item value="off Set" />
      <item value="Set a hint to the system about whether this fragment's UI is currently visible * to the user. This hint defaults to true and is persistent across fragment instance * state save and restore. * * &lt;p&gt;An app may set this to false to indicate that the fragment's UI is * scrolled out of visibility or is otherwise not directly visible to the user. * This may be used by the system to prioritize operations such as fragment lifecycle updates * or loader ordering behavior.&lt;/p&gt; *" />
      <item value="Set a hint to the system about whether this fragment's UI is currently visible * to the user. This hint defaults to true and is persistent across fragment instance * state save and restore." />
      <item value="Add a listener that will be notified of any changes in scroll state or position. *" />
      <item value="skip Memory Cache" />
      <item value="skip Memory Cache Of" />
      <item value="Returns a {@link RequestOptions} object with {@link #skipMemoryCache(boolean)} set." />
      <item value="* Sets the certificate pinner that constrains which certificates are trusted. By default HTTPS * connections rely on only the {@link #sslSocketFactory SSL socket factory} to establish trust. * Pinning certificates avoids the need to trust certificate authorities. */" />
      <item value="Called by RecyclerView when it starts observing this Adapter." />
      <item value="Layout state should be one of 100 but it is 10" />
      <item value="m Max Distance" />
      <item value="Only show over-scroll effects if the content is large enough to meaningfully scroll." />
      <item value="Never show over-scroll effects." />
      <item value="Always show over-scroll effects, even if the content fits entirely within the available space." />
      <item value="No resource identifier found for attribute" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="342" />
        <entry key="ENGLISH" value="343" />
        <entry key="POLISH" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>