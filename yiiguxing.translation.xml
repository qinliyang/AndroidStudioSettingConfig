<application>
  <component name="AppStorage">
    <histories>
      <item value="No space left on device" />
      <item value="Change Notifier" />
      <item value="shutdown Gracefully" />
      <item value="Inet Socket Address" />
      <item value="Future" />
      <item value="Interrupted Exception" />
      <item value="CONNECT TIMEOUT MILLIS" />
      <item value="Can't toast on a thread that has not called Looper.prepare()" />
      <item value="Bootstrap" />
      <item value="REQUEST BIND PHONE" />
      <item value="Notification Ind" />
      <item value="Multimedia Message Pdu" />
      <item value="we set wifi's score to 1000, so will always set wifi as a default network." />
      <item value="restart" />
      <item value="crashed" />
      <item value="Helper for getTransformation. Subclasses should implement this to apply * their transforms given an interpolation value. Implementations of this * method should always replace the specified Transformation or document * they are doing otherwise." />
      <item value="random Rotation" />
      <item value="on Animation Repeat" />
      <item value="factor" />
      <item value="Stopping service due to app idle" />
      <item value="rand" />
      <item value="Rotation" />
      <item value="Inserts the specified element into this queue if it is possible to do * so immediately without violating capacity restrictions. * When using a capacity-restricted queue, this method is generally * preferable to {@link #add}, which can fail to insert an element only * by throwing an exception." />
      <item value="* * Inserts the specified element into this queue if it is possible to do * so immediately without violating capacity restrictions. * When using a capacity-restricted queue, this method is generally * preferable to {@link #add}, which can fail to insert an element only * by throwing an exception." />
      <item value="* Inserts the specified element into this queue if it is possible to do * so immediately without violating capacity restrictions. * When using a capacity-restricted queue, this method is generally * preferable to {@link #add}, which can fail to insert an element only * by throwing an exception." />
      <item value="Inserts the specified element into this queue if it is possible to do so * immediately without violating capacity restrictions, returning * {@code true} upon success and throwing an {@code IllegalStateException} * if no space is currently available." />
      <item value="Queue" />
      <item value="is Show One Action Get Coupon" />
      <item value="Wait until the connection is closed." />
      <item value="Notify" />
      <item value="Factor" />
      <item value="periscope" />
      <item value="scale" />
      <item value="apply Transformation" />
      <item value="heart anim length rand" />
      <item value="on Start Command" />
      <item value="* * Return the current display metrics that are in effect for this resource * object. The returned object should be treated as read-only. *" />
      <item value="* Return the current display metrics that are in effect for this resource * object. The returned object should be treated as read-only. * * @return Th" />
      <item value="Flip Drag View" />
      <item value="Connect Timeout Exception" />
      <item value="ExifInterface got an unsupported image format file(ExifInterface supports JPEG and some RAW image formats only) or a corrupted JPEG file to ExifInterface." />
      <item value="is Preinstalled" />
      <item value="Class Cast Exception" />
      <item value="syntax error,except start with { or [,but actually start with error" />
      <item value="Tab Point Show Event" />
      <item value="sync" />
      <item value="The type Should never happen exception." />
      <item value="Suggestion: use a compatible library with a minSdk of at most 17, or increase this project's minSdk version to at least 18, or use tools:overrideLibrary=&quot;com.littlegreens.netty.client&quot; to force usage (may lead to runtime failures)" />
      <item value="This method serializes the specified object into its equivalent representation as a tree of * {@link JSONObject}s. *" />
      <item value="MSGTYPE RESPONSE" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="817" />
        <entry key="ENGLISH" value="818" />
        <entry key="POLISH" value="3" />
        <entry key="DANISH" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>