<application>
  <component name="AppStorage">
    <histories>
      <item value="legacy" />
      <item value="Bezier" />
      <item value="Program type already present: androidx.annotation.AnyRes" />
      <item value="obtain Styled Attributes" />
      <item value="Locks the focus as the first step for a still image capture." />
      <item value="The specified Android SDK Build Tools version (27.0.3) is ignored, as it is below the minimum supported version (28.0.2) for Android Gradle Plugin 3.2.0." />
      <item value="Remote host closed connection during handshake" />
      <item value="(Usually optional) Explicitly set the component to handle the intent. * If left with the default value of null, the system will determine the * appropriate class to use based on the other fields (action, data, * type, categories) in the Intent. If this class is defined, the * specified class will always be used regardless of the other fields. You * should only set this value when you know you absolutely want a specific * class to be used; otherwise it is better to let the system find the * appropriate class so that you will respect the installed applications * and user preferences." />
      <item value="Create a new component identifier from a Context and class name." />
      <item value="If set, this intent will always match any components in packages that * are currently stopped. This is the default behavior when * {@link #FLAG_EXCLUDE_STOPPED_PACKAGES} is not set. If both of these * flags are set, this one wins (it allows overriding of exclude for * places where the framework may automatically set the exclude flag)." />
      <item value="FLAG INCLUDE STOPPED PACKAGES" />
      <item value="The resulting string" />
      <item value="Writes retrieved data directly to the disk cache before it's decoded." />
      <item value="Saves no data to cache." />
      <item value="Velocity Tracker" />
      <item value="hardware Accelerated" />
      <item value="supports Rtl" />
      <item value="Lollipop" />
      <item value="* Temporary until we completely switch to" />
      <item value="Marshmallow" />
      <item value="set Web Contents Debugging Enabled" />
      <item value="Wechat" />
      <item value="Timeline" />
      <item value="Platform Type" />
      <item value="promotion" />
      <item value="品质" />
      <item value="Attempts to always load the resource as a {@link android.graphics.Bitmap}, even if it could * actually be animated." />
      <item value="Returns a request builder to load the given" />
      <item value="on Resource Ready" />
      <item value="Invite Share" />
      <item value="Four" />
      <item value="Edge" />
      <item value="种草师" />
      <item value="Optional tag name for the fragment, to later retrieve the * fragment with {@link FragmentManager#findFragmentByTag(String) * FragmentManager.findFragmentByTag(String)}." />
      <item value="Constant for {@link #importance}: This process is running the * foreground UI; that is, it is the thing currently at the top of the screen * that the user is interacting with." />
      <item value="Context.startActivity(Intent, Bundle)} for more details." />
      <item value="&lt;p&gt;As a special case, if you call startActivityForResult() with a requestCode * &gt;= 0 during the initial onCreate(Bundle savedInstanceState)/onResume() of your * activity, then your window will not be displayed until a result is * returned back from the started activity. This is to avoid visible * flickering when redirecting to another activity." />
      <item value="Note that this method should only be used with Intent protocols * that are defined to return a result. In other protocols (such as * {@link Intent#ACTION_MAIN} or {@link Intent#ACTION_VIEW}), you may * not get the result when you expect. For example, if the activity you * are launching uses {@link Intent#FLAG_ACTIVITY_NEW_TASK}, it will not * run in your task and thus you will immediately receive a cancel result. *" />
      <item value="Launch an activity for which you would like a result when it finished. * When this activity exits, your * onActivityResult() method will be called with the given requestCode. * Using a negative requestCode is the same as calling * {@link #startActivity} (the activity is not launched as a sub-activity). *" />
      <item value="with no options." />
      <item value="Modifies the standard behavior to allow results to be delivered to fragments. * This imposes a restriction that requestCode be &lt;= 0xffff." />
      <item value="Swipe Cards View" />
      <item value="* Shows a previously hidden fragment. This is only relevant for fragments whose * views have been added to a container, as this will cause the view to * be shown." />
      <item value="Call this when your activity is done and should be closed. The * ActivityResult is propagated back to whoever launched you via * onActivityResult()." />
      <item value="on Trim Memory" />
      <item value="The component launched as the first activity in the task. This can * be considered the &quot;application&quot; of this task." />
      <item value="Flag for {@link #moveTaskToFront(int, int)}: don't count this as a * user-instigated action, so the current activity will not receive a * hint that the user is leaving." />
      <item value="Flag for {@link #moveTaskToFront(int, int)}: also move the &quot;home&quot; * activity along with the task, so it is positioned immediately behind * the task." />
      <item value="Get the list of tasks associated with the calling application." />
      <item value="Additional operational flags." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="547" />
        <entry key="ENGLISH" value="548" />
        <entry key="POLISH" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>