<application>
  <component name="AppStorage">
    <histories>
      <item value="m Is Recyclable Count" />
      <item value="Informs the recycler whether this item can be recycled. Views which are not * recyclable will not be reused for other items until setIsRecyclable() is * later set to true. Calls to setIsRecyclable() should always be paired (one * call to setIsRecyclabe(false) should always be matched with a later call to * setIsRecyclable(true)). Pairs of calls may be nested, as the state is internally * reference-counted." />
      <item value="Return the ViewHolder for the item in the given position of the data set. Unlike * {@link #findViewHolderForLayoutPosition(int)} this method takes into account any pending * adapter changes that may not be reflected to the layout yet. On the other hand, if * {@link Adapter#notifyDataSetChanged()} has been called but the new layout has not been * calculated yet, this method will return &lt;code&gt;null&lt;/code&gt; since the new positions of views * are unknown until the layout is calculated." />
      <item value="Called by RecyclerView to display the data at the specified position. This method should * update the contents of the {@link ViewHolder#itemView} to reflect the item at the given * position." />
      <item value="airbnb" />
      <item value="Only fullscreen opaque activities can request orientation" />
      <item value="multidex" />
      <item value="get Velocity By Distance" />
      <item value="Edge Insets" />
      <item value="Unable to start activity ComponentInfo" />
      <item value="leading" />
      <item value="dynamic" />
      <item value="FLUTTER FRAGMENT PAGE URL" />
      <item value="a string consisting of exactly this sequence of characters" />
      <item value="* Returns a string representation of the object. In general, the * {@code toString} method returns a string that * &quot;textually represents&quot; this object. The result should * be a concise but informative representation that is easy for a * person to read. * It is recommended that all subclasses override this method." />
      <item value="uses Cleartext Traffic" />
      <item value="[StatefulWidget] and [State], for widgets that can build differently /// several times over their lifetime. /// * [InheritedWidget], for widgets that introduce ambient state that can /// be read by descendant widgets." />
      <item value="Scaffold" />
      <item value="A tap with a primary button has occurred. ///" />
      <item value="Gesture Detector" />
      <item value="To add custom fonts to your application, add a fonts section here, # in this &quot;flutter&quot; section. Each entry in this list should have a # &quot;family&quot; key with the font family name, and a &quot;fonts&quot; key with a # list giving the asset and other descriptors for the font. For" />
      <item value="you can quickly migrate your app by following the steps" />
      <item value="quickly" />
      <item value="Generated by pub" />
      <item value="message" />
      <item value="Illegal Access Exception" />
      <item value="To avoid potential build failures, you can quickly migrate your app by following the steps on https://goo.gl/CP92wY. Running Gradle task 'assembleDebug'..." />
      <item value="../../../ricky/Document/flutter/.pub-cache/hosted/pub.flutter-io.cn/cached_network_image-1.1.3/lib/src/cached_network_image_provider.dart:42:24: Error: The method 'CachedNetworkImageProvider.load' has fewer positional arguments than those of overridden method 'ImageProvider.load'. ImageStreamCompleter load(CachedNetworkImageProvider key)" />
      <item value="Errors during snapshot creation: null" />
      <item value="No space left on device" />
      <item value="Change Notifier" />
      <item value="shutdown Gracefully" />
      <item value="Inet Socket Address" />
      <item value="Future" />
      <item value="Interrupted Exception" />
      <item value="CONNECT TIMEOUT MILLIS" />
      <item value="Can't toast on a thread that has not called Looper.prepare()" />
      <item value="Bootstrap" />
      <item value="REQUEST BIND PHONE" />
      <item value="Notification Ind" />
      <item value="Multimedia Message Pdu" />
      <item value="we set wifi's score to 1000, so will always set wifi as a default network." />
      <item value="restart" />
      <item value="crashed" />
      <item value="Helper for getTransformation. Subclasses should implement this to apply * their transforms given an interpolation value. Implementations of this * method should always replace the specified Transformation or document * they are doing otherwise." />
      <item value="random Rotation" />
      <item value="on Animation Repeat" />
      <item value="factor" />
      <item value="Stopping service due to app idle" />
      <item value="rand" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="846" />
        <entry key="ENGLISH" value="847" />
        <entry key="POLISH" value="3" />
        <entry key="DANISH" value="2" />
        <entry key="FRENCH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>